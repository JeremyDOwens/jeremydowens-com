The aim of this project is to build a personal portfolio and professional blogging website using the Play!
Framework.

This is for my own personal website, but I am striving to ensure that the code is easily adapted for use
by anyone who would like to operate a similar site. There are some items that are static and built into the twirl
templates. Over time, I plan to factor that out into configuration and database references. As that happens, the SETUP
section will be updated.

If you would like to contribute, contact jeremy@jeremydowens.com

SETUP:

1. Declare the following environment variables

APPLICATION_SECRET - this is required for the Play Framework
DATABASE_URL - this is automatically generated on Heroku, but on other platforms may need to be explicitly declared
DNR_EMAIL - email address for automated emails
DNR_MAIL_PORT
DNR_MAIL_SERVER
DNR_PASSWORD

2. Change the following fields in application.conf to match your own site

sitevars {
  siteAddress="www.jeremydowens.com"
}

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = [".jeremydowens.com", "jeremy-d-owens.herokuapp.com"]
}

3. Set up tables in your database (see app->models for the representations in Slick)

Eventually this will be set to create the tables if they don't exist and automatically adjust the schema using
evolutions, but that is not in place yet.

Currently, these queries should set up the tables properly

CREATE TABLE site_user (id SERIAL PRIMARY KEY NOT NULL, uname varchar(255) UNIQUE NOT NULL, email varchar(255) UNIQUE NOT NULL, role varchar(255) NOT NULL, templink varchar(255) NOT NULL, password varchar(255) NOT NULL, active boolean NOT NULL DEFAULT false);

CREATE TABLE project (id SERIAL PRIMARY KEY NOT NULL, title varchar(255) NOT NULL, git varchar(255) DEFAULT 'n/a', owner int NOT NULL REFERENCES site_user(id), description text);

CREATE TABLE post (id SERIAL PRIMARY KEY NOT NULL, title varchar(255) NOT NULL, date timestamp NOT NULL, body text, project int NOT NULL REFERENCES project(id), author int NOT NULL REFERENCES site_user(id));

CREATE TABLE tag (id SERIAL PRIMARY KEY NOT NULL, name varchar(255) UNIQUE NOT NULL, description text);

CREATE TABLE project_tag (project int NOT NULL REFERENCES project(id), tag int NOT NULL REFERENCES tag(id));

CREATE TABLE post_tag (project int NOT NULL REFERENCES post(id), tag int NOT NULL REFERENCES tag(id));